parameters:
    #kaliop_identity.interactive_event_listener.class: Kaliop\IdentityManagementBundle\EventListener\InteractiveLoginListener
    kaliop_identity.security.ip_to_user_mapper.class: Kaliop\IdentityManagementBundle\Security\Helper\IpToUserMapper
    kaliop_identity.security.authentication.provider.ip: Kaliop\IdentityManagementBundle\Security\Authentication\Provider\IPAuthenticationProvider
    kaliop_identity.security.authentication.listener.ip.class: Kaliop\IdentityManagementBundle\Security\Firewall\IPListener
    kaliop_identity.security.authentication.provider.remoteuser.class: Kaliop\IdentityManagementBundle\Security\Authentication\Provider\RemoteUserAuthenticationProvider
    kaliop_identity.security.remoteuser_provider.class: Kaliop\IdentityManagementBundle\Security\User\Provider\RemoteUser
    kaliop_identity.interactive_event_listener.class: Kaliop\IdentityManagementBundle\EventListener\InteractiveLoginListener

    # Used for ip-based login
    kaliop_identity.ip_login_map: []

    # The map of remote-user php classes to services handling them, eg:
    # Kaliop\IdentityManagementBundle\Adapter\AMS\RemoteUser: kaliop_identity.security.remoteuser_handler.ams
    kaliop_identity.remoteuser_service_map: {}


services:

    ### IP auth

    # The service which maps external IPs to internal users
    kaliop_identity.security.ip_to_user_mapper:
        class: "%kaliop_identity.security.ip_to_user_mapper.class%"
        arguments:
            # Array of IP => user login
            - "%kaliop_identity.ip_login_map%"

    # The services implementing IP based auth - abstract, as their concrete implementations are built from a factory
    # using data from the firewall section of security.yml
    kaliop_identity.security.authentication.provider.ip:
        class: "%kaliop_identity.security.authentication.listener.ip.class%"
        arguments:
            - "" # A mapper service, conforming to IpToUserMapper interface
            - "" # User provider service
        abstract: true
    kaliop_identity.security.authentication.listener.ip:
        class: "%kaliop_identity.security.authentication.listener.ip.class%"
        arguments: ["@security.context", "@security.authentication.manager"]
        abstract: true

    ### RemoteUser auth - the core services

    # The services implementing remote-based auth - abstract, as their concrete implementations are built from a factory
    # using data from the firewall section of security.yml
    kaliop_identity.security.authentication.provider.remoteuser:
        class: "%kaliop_identity.security.authentication.provider.remoteuser.class%"
        arguments:
            - "" # A client service. Will be injected from the config of the firewall
            - "" # A user provider service. Will be injected from the config of the firewall
            - "" # Firewall id. Will be injected from the config of the firewall
            - true
        abstract: true
    # the security listener is just a plain form-based one
    kaliop_identity.security.authentication.listener.remoteuser:
        parent: security.authentication.listener.form
        abstract: true

    # The service used to load remote users and convert them to eZ users (done via the handlers map below)
    kaliop_identity.security.remoteuser_provider:
        class: "%kaliop_identity.security.remoteuser_provider%"
        arguments:
            # the eZ service which loads eZ repo users
            - "@ezpublish.security.user_provider"
            # a mapping of RemoteUser classes to handler services
            -
                "%kaliop_identity.remoteuser_service_map%"
            - "@service_container"

    # This tagged service is fired when a non-ez security provider is used to log in users
    kaliop_identity.interactive_event_listener:
        class: "%kaliop_identity.interactive_event_listener.class%"
        arguments: ["@kaliop_identity.security.remoteuser_provider"]
        tags:
            - { name: kernel.event_subscriber }

    ### RemoteUser auth - the services specific to a single remote user source

    # LDAP example

